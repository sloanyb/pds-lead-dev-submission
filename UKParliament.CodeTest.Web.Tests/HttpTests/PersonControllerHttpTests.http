### POST: Save a new person without a date of birth or department. This should generate a bad request.
POST https://localhost:44416/api/person
Content-Type: application/json

{
  "firstName": "Jane",
  "lastName": "Doe"
}

### POST: Save a new person
POST https://localhost:44416/api/person
Content-Type: application/json

{
  "firstName": "Jane",
  "lastName": "Doe",
  "dateOfBirth": "1990-01-01",
  "departmentId": 1
}

> {% client.global.set("personId", response.body.id) %}

### GET: Retrieve the person by id
GET https://localhost:44416/api/person/{{personId}}

### PUT: Update an existing person
PUT https://localhost:44416/api/person/{{personId}}
Content-Type: application/json

{
  "id": {{personId}},
  "firstName": "Janet",
  "lastName": "Doe",
  "dateOfBirth": "1990-01-01",
  "departmentId": 2
}


### PUT: Update an existing person without a last name. This should generate a bad request.
PUT https://localhost:44416/api/person/{{personId}}
Content-Type: application/json

{
  "id": {{personId}},
  "firstName": "Janet",
  "dateOfBirth": "1990-01-01",
  "departmentId": 2
}


### Get all people
GET https://localhost:44416/api/person
